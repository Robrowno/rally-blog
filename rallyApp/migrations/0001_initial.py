# Generated by Django 3.2.15 on 2022-09-15 09:14

import cloudinary.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email_address', models.EmailField(max_length=254)),
                ('query_type', models.BooleanField(choices=[(0, 'Question'), (1, 'Sponsorship'), (2, 'Other')], default=0)),
                ('textbox', models.TextField()),
                ('contacted_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-contacted_on'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forget_password_token', models.CharField(max_length=100)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=150, populate_from='title')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('eventName', models.CharField(max_length=150)),
                ('associated_club', models.CharField(max_length=200)),
                ('entry_fee', models.FloatField(blank=True)),
                ('location', models.CharField(blank=True, max_length=220)),
                ('content', models.TextField()),
                ('featured_image', cloudinary.models.CloudinaryField(default='placeholder', max_length=255, verbose_name='image')),
                ('car', models.CharField(max_length=150)),
                ('finish', models.BooleanField(choices=[(0, 'DNF'), (1, 'Finished')], default=0)),
                ('class_result', models.PositiveIntegerField()),
                ('overall_result', models.PositiveIntegerField()),
                ('championship_result', models.PositiveIntegerField()),
                ('post_status', models.BooleanField(choices=[(0, 'Draft'), (1, 'Published')], default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('comments', models.ManyToManyField(blank=True, related_name='post_comments', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='post_likes', to=settings.AUTH_USER_MODEL)),
                ('shares', models.ManyToManyField(blank=True, related_name='post_shares', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=70, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('body', models.TextField(null=True)),
                ('posted_on', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments_section', to='rallyApp.post')),
            ],
            options={
                'ordering': ['-posted_on'],
            },
        ),
    ]
